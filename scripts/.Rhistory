library(dplyr)
library(jsonlite)
library(httr)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, Category = snippet.title)
View(data)
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
View(US_videos)
l <- as.character(data$Category)
names(l) <- data$category_id
US_videos$category <- l[[US_videos$category_id]]
View(US_videos)
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
library(dplyr)
library(plotly)
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date) %>%
as.Date(trending_date, "%Y.%d.%m")
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date) %>%
as.Date(new_data$trending_date, "%Y.%d.%m")
View(new_data)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
View(new_data)
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
View(new_data)
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
View(new_data)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
View(new_data)
?list
xvar <- vector(as.Date(2017-05, "%Y-%m"), as.Date(2017-11, "%Y-%m"))
xvar <- c("2017-5-31", "2017-11-01")
yvar <- c("Entertainment", "People & Blogs", "Sports")
my_data <- my_data %>%
filter(trending_date == seq(as.Date("2016-01-01"), as.Date("2016-12-31"), by=1))
my_data <- group_by(month=floor_date(xvar, "month"))
install.packages("lubridate")
library(lubridate)
my_data <- group_by(month=floor_date(xvar, "month"))
my_data <- group_by(month=floor_date(xvar[1], "month"))
my_data <- group_by(month=floor_date(xvar[[1]], "month"))
xvar <- list("2017-5-31", "2017-11-01")
my_data <- group_by(month=floor_date(xvar[[1]], "month"))
data_one <- xvar[[1]]
my_data <- group_by(month=floor_date(date_one, "month"))
date_two <- xvar[[2]]
library(dplyr)
library(plotly)
library(lubridate)
build_line <- function(my_data, xvar, yvar){
#testing
my_data <- new_data
xvar <- list("2017-5-31", "2017-11-01")
yvar <- list("Entertainment", "People & Blogs", "Sports")
data_one <- xvar[[1]]
date_two <- xvar[[2]]
my_data <- my_data %>%
filter(trending_date < date_two & trending_date > date_one)
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
source("analysis.R")
my_data <- new_data
xvar <- list("2017-5-31", "2017-11-01")
yvar <- list("Entertainment", "People & Blogs", "Sports")
data_one <- xvar[[1]]
date_two <- xvar[[2]]
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
library(dplyr)
library(plotly)
library(lubridate)
source("analysis.R")
build_line <- function(my_data, xvar, yvar){
#testing
my_data <- new_data
xvar <- list("2017-5-31", "2017-11-01")
yvar <- list("Entertainment", "People & Blogs", "Sports")
data_one <- xvar[[1]]
date_two <- xvar[[2]]
my_data <- my_data %>%
filter(trending_date < date_two & trending_date > date_one)
}
my_data <- new_data
xvar <- list("2017-5-31", "2017-11-01")
yvar <- list("Entertainment", "People & Blogs", "Sports")
data_one <- xvar[[1]]
date_two <- xvar[[2]]
my_data <- my_data %>%
filter(trending_date < date_two & trending_date > date_one)
View(my_data)
my_data <- my_data %>%
filter(trending_date < date_two & trending_date > date_one)
date_one <- xvar[[1]]
my_data <- my_data %>%
filter(trending_date < date_two & trending_date > date_one)
View(my_data)
my_data <- my_data %>%
filter(trending_date < date_two)
#testing
my_data <- new_data
my_data <- my_data %>%
filter(trending_date < date_two)
#testing
my_data <- new_data
View(my_data)
my_data <- my_data %>%
filter(trending_date < as.Date(date_two))
View(new_data)
my_data <- my_data %>%
filter(trending_date < as.Date(date_two)& trending_date > as.Date(date_one))
#testing
my_data <- new_data
my_data <- my_data %>%
filter(trending_date < as.Date(date_two)& trending_date > as.Date(date_one))
my_data <- my_data %>%
filter(trending_date < as.Date(date_two) & trending_date > as.Date(date_one))
#testing
my_data <- new_data
my_data <- my_data %>%
filter(trending_date < as.Date(date_two) & trending_date > as.Date(date_one))
#testing
my_data <- new_data
my_data <- my_data %>%
filter(trending_date < as.Date(date_two))
#testing
my_data <- new_data
my_data <- my_data %>%
filter(trending_date < as.Date(date_two))
my_data <- my_data %>%
filter(trending_date < as.Date(date_two))
#testing
my_data <- new_data
xvar <- list("2017-5-31", "2017-11-01")
yvar <- list("Entertainment", "People & Blogs", "Sports")
my_data <- my_data %>%
filter(trending_date < as.Date(date_two))
#testing
my_data <- new_data
my_data <- my_data %>%
filter(trending_date < as.Date(date_two, "%Y-%m-%d"))
date_one > date_two
as.Date(date_one) < as.Date(date_two)
#testing
my_data <- new_data
my_data <- my_data[, my_data$trending_date < as.Date(date_two)]
my_data <- my_data[, my_data$trending_date < as.Date(date_two)]
View(my_data)
#testing
my_data <- new_data
my_data <- my_data[my_data$trending_date < as.Date(date_two),]
date_one <- as.Date(xvar[[1]])
date_two <- as.Date(xvar[[2]])
#testing
my_data <- new_data
