setwd("~/Desktop/INFO201/yt-trending-data-analysis/scripts")
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, Category = snippet.title)
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALS
library(dplyr)
library(jsonlite)
library(httr)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, Category = snippet.title)
install.packages('jsonlite')
install.packages("jsonlite")
library(dplyr)
library(jsonlite)
library(httr)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, Category = snippet.title)
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
new_data <- left_join(US_videos, data, by = "category_id")
data <- fromJSON("../data/US_category_id.json", stringAsFactors = FALSE)
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, Category = snippet.title)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, Category = snippet.title)
is.data.frame(data)
is.data.frame(US_videos)
View(data)
new_data <- left_join(US_videos, data, by = "category_id")
?left_join
new_data <- left_join(US_videos, data, by = data$category_id)
new_data <- left_join(US_videos, data, by = category_id)
new_data <- left_join(US_videos, data, by = "category_id")
data$category_id <- as.numeric(data$category_id)
data$category_id <- as.integer(data$category_id)
new_data <- left_join(US_videos, data, by = "category_id")
View(US_videos)
View(new_data)
View(new_data)
channel <- new_data %>% select (channel_title) %>% group_by(channel_title)
channel <- new_data %>% select (channel_title) %>% group_by(channel_title)
%>% summarise( sum = nrow(channel_title)
channel <- new_data %>% select (channel_title) %>% group_by(channel_title)%>%
summarise( sum = nrow(channel_title)
View(channel)
channel <- new_data %>% select (channel_title) %>% group_by(channel_title)%>%
summarise( sum = sum(channel_title)
View(channel)
channel <- new_data %>% select (channel_title) %>% group_by(channel_title)%>%
mutate(channel$channel_num)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, Category = snippet.title)
data$category_id <- as.integer(data$category_id)
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
new_data <- left_join(US_videos, data, by = "category_id")
View(new_data)
install.packages("wordcloud")
library("tm")
install.packages("tm")
library(wordcloud)
install.packages("slam")
install.packages("slam")
library(slam)
library(wordcloud)
library(tm)
install.packages(memoise)
install.packages("memoise")
setwd("~/Desktop/INFO201/RStudio/workcloud")
shiny::runApp()
runApp()
books <<- list("A Mid Summer Night's Dream" = "summer",
"The Merchant of Venice" = "merchant",
"Romeo and Juliet" = "romeo")
runApp()
library(dplyr)
books <<- list(new_data$Category)
View(books)
books <<- new_data$Category
books <<- data.frame(new_data$Category)
View(data)
View(books)
View(books)
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("../data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
books <<- data.frame(new_data$Category) %>%
group_by(Category)
source('analysis.R')
setwd("~/Desktop/INFO201/RStudio/workcloud")
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
category <<- data.frame(new_data$Category) %>%
group_by(Category)
category <<- new_data %>%select(Category) %>%
group_by(Category)
View(new_data)
category <<- new_data %>%select(category) %>%
group_by(category)
View(category)
Category <<- new_data %>%select(category) %>%
group_by(category) %>% summarise(sum = nrow(category))
Category <<- new_data %>%select(category) %>%
group_by(category) %>% mutate(rows = nrow(category))
Category <<- new_data %>%select(category) %>%
group_by(category)
View(Category)
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("../data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
data$category_id <- as.integer(data$category_id)
new_data <- left_join(US_videos, data, by = "category_id")
US_videos <- read.csv("data/USvideos.csv", stringsAsFactors = FALSE)
new_data <- left_join(US_videos, data, by = "category_id")
library(dplyr)
library(jsonlite)
library(httr)
# Convert JSON into data frame (Category ID to Category conversion)
data <- fromJSON("data/US_category_id.json")
data <- flatten(data[["items"]]) %>%
select(id, snippet.title) %>%
rename(category_id = id, category = snippet.title)
# Convert category id from char to int
data$category_id <- as.integer(data$category_id)
# Read in data of Top 200 US Videos
US_videos <- read.csv("data/USvideos.csv", stringsAsFactors = FALSE)
# Join `US_videos` with `data` by category id. Adds categories to the videos
new_data <- left_join(US_videos, data, by = "category_id")
# Split the tags into a list
new_data$tags <- as.list(strsplit(new_data$tags, "|", fixed = T))
# Filter out videos we can't use (videos without comments, ratings, or deleted videos)
# Select only columns that we need
new_data <- new_data %>%
filter(comments_disabled == 'False') %>%
filter(ratings_disabled == 'False') %>%
filter(video_error_or_removed == 'False') %>%
select(video_id, trending_date, title, channel_title, category, tags,
views, likes, dislikes, comment_count, thumbnail_link)
# Change the format of date
new_data$trending_date <- paste0("20",new_data$trending_date)
new_data$trending_date <- as.Date(new_data$trending_date, "%Y.%d.%m")
Category <<- new_data %>%select(category) %>%
group_by(category)
View(Category)
Category <<- new_data %>%select(category) %>%
group_by(category) %>% unique(category)
View(Category)
Category <<- new_data %>%select(category, tag) %>%
group_by(category)
View(new_data)
Category <<- new_data %>%select(category, tags) %>%
group_by(category)
View(data)
View(Category)
tag <<- new_data %>%select(category, tags) %>%
group_by(category)
tag <<- new_data %>%select(category, tags) %>%
group_by(category)
Category <<- new_data %>%select(category, tags) %>%
group_by(category)
View(Category)
combine <- aggregate(id ~cetegory, data = Category, paste)
combine <- aggregate(id ~category, data = Category, paste)
combine <- aggregate(id ~category, data = Category, paste, collapse = ", ")
combine <- aggregate(id ~category, data = Category)
combine <- aggregate(id ~category, data = Category, toString)
Category <<- new_data %>%select(category, tags) %>%
group_by(category) %>% summarise(tags = paste(tags))
Category <<- new_data %>%select(category, tags) %>%
group_by(category) %>% summarise(tags)
Category <- new_data %>%select(category, tags) %>%
group_by(category)
combine <- aggregate(tags~category,data = Category)
combine <- aggregate(tags~category,data = Category, toString)
unlist(Category$tags)
combine <- aggregate(tags~category,data = Category)
unlist(Category$tags)
Category <- new_data %>%select(category, tags) %>%
group_by(category) %>%unlist(Category$tags)
Category <- new_data %>%select(category, tags) %>%
group_by(category)
combine <- aggregate(tags~category,data = Category, unlist(category))
toString(Category$tags)
Category <- new_data %>%select(category, tags) %>%
group_by(category)
toString(Category$tags)
combine <- aggregate(tags~category,data = Category)
Category <- new_data %>%select(category, tags) %>%
group_by(category)
View(Category)
Category <- new_data %>%select(category, tags) %>%
group_by(category) %>% summarise(tags = c(tags))
Category <- new_data %>%select(category, tags) %>%
group_by(category) %>% mutate(count = n())
View(Category)
setwd("~/Desktop/INFO201/RStudio/workcloud")
